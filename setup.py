import subprocess
import sys
import os
import shutil
from glob import glob

# setup.py:
#
# - supports python>=2.6
# - assumes you've just checked out the project, i.e. clean dirs with only
#   dirtiness generated by previous invocations of this setup.py

# Note: need to be quiet (no stdout/err) as calls like `python setup.py --name`
# would otherwise break

script_dir = os.path.dirname(os.path.realpath(__file__))

# DEVNULL
if (sys.version_info.major, sys.version_info.minor)  >= (3, 3):
    DEVNULL = subprocess.DEVNULL
else:
    DEVNULL = open(os.devnull, 'w')

# Install PyBuilder if missing
try:
    subprocess.check_call(['pyb', '--version'], stdout=DEVNULL, stderr=DEVNULL)
except FileNotFoundError as ex:
    subprocess.check_call(['pip', 'install', 'pybuilder'], stdout=DEVNULL, stderr=DEVNULL)
    
# Create the real setup.py in $dir_dist
# Note: publish task instead of package because need filter_resources, i.e. need after-package
if os.environ.get('READTHEDOCS') == 'True':
    # When building for Read the Docs
    tasks = ['publish']
else:
    # When e.g. someone runs `pip install git+https://github/...project.git`
    tasks = ['install_build_dependencies', 'publish']

for task in ('run_unit_tests', 'run_integration_tests', 'verify'):
    tasks.extend(['--exclude', task])
subprocess.check_call(
    ['pyb'] + tasks, 
    stdout=DEVNULL, stderr=DEVNULL, cwd=script_dir
)

# dist_dir, contains setup.py
dist_dir = glob(os.path.join(script_dir, 'target', 'dist', '*'))
if len(dist_dir) > 1:
    raise Exception('Multiple packages in dist dir, do not know which to use. Please run ``pyb clean`` and try again')
dist_dir = dist_dir[0]

# Move any files pip created to dist_dir 
pip_files = glob(os.path.join(script_dir, 'pip-*'))
for file in pip_files:
    shutil.move(file, dist_dir)

# Forward to setup.py
setup_py = os.path.join(dist_dir, 'setup.py')
subprocess.check_call([sys.executable, setup_py] + sys.argv[1:], cwd=os.path.dirname(setup_py))

# Move pip files back
for file in pip_files:
    shutil.move(os.path.join(dist_dir, os.path.basename(file)), file)

# Add symlinks pointing to any output
egg_info = glob(os.path.join(dist_dir, '*.egg-info'))
if egg_info:
    egg_info = egg_info[0]
    link = os.path.join(script_dir, os.path.basename(egg_info))
    if not os.path.islink(link):
        os.symlink(egg_info, link)
